{
    "swagger": "2.0",
    "info": {
        "description": "A production-ready RESTful API for managing movies with comprehensive user authentication, role-based authorization, rate limiting, and email notifications.\n\n## Features\n- Full CRUD operations for movies\n- User registration and authentication\n- Role-based access control (RBAC)\n- Token-based authentication (Bearer)\n- Email verification and password reset\n- Rate limiting (2 req/s, burst: 4)\n- Pagination and filtering\n- CORS support\n\n## Authentication\nMost endpoints require authentication. Use the `/v1/tokens/authentication` endpoint to obtain a token, then include it in the Authorization header as: `Bearer YOUR_TOKEN`\n\n## Rate Limiting\nAPI requests are rate-limited to 2 requests per second with a burst of 4 requests.",
        "title": "Gmoapi - Movie Management API",
        "contact": {
            "name": "ucokman",
            "url": "https://github.com/ucok-man/gmoapi",
            "email": "support@ucokman.web.id"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:4000",
    "basePath": "/v1",
    "paths": {
        "/": {
            "get": {
                "description": "Returns the API health status, environment, and version information. This endpoint does not require authentication and can be used for monitoring.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "System Health Check",
                "responses": {
                    "200": {
                        "description": "API is healthy and operational",
                        "schema": {
                            "type": "object",
                            "properties": {
                                " system_info": {
                                    "type": "object",
                                    "properties": {
                                        " version": {
                                            "type": "string"
                                        },
                                        "environment": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/movies": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a paginated list of movies with optional filtering by title (full-text search) and genres. Supports sorting by multiple fields.\n\n**Permissions Required:** `movies:read`\n\n**Filtering:**\n- Title: Partial match using PostgreSQL full-text search\n- Genres: Multiple genres can be specified (comma-separated)\n\n**Sorting:**\n- Prefix with `-` for descending order (e.g., `-year`)\n- Available fields: id, title, year, runtime",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "List All Movies",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Godfather",
                        "description": "Filter by movie title (partial match, case-insensitive)",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "drama,crime",
                        "description": "Filter by genres (comma-separated)",
                        "name": "genres",
                        "in": "query"
                    },
                    {
                        "maximum": 10000000,
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Page number (minimum: 1, maximum: 10,000,000)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page (minimum: 1, maximum: 100)",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "title",
                            "year",
                            "runtime",
                            "-id",
                            "-title",
                            "-year",
                            "-runtime"
                        ],
                        "type": "string",
                        "default": "id",
                        "description": "Sort field",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of movies with pagination metadata",
                        "schema": {
                            "type": "object",
                            "properties": {
                                " metadata": {
                                    "$ref": "#/definitions/data.Metadata"
                                },
                                "movies": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/data.Movie"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid query parameters",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid authentication token",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - user account not activated or insufficient permissions",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity - validation errors",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests - rate limit exceeded",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new movie entry in the catalog. All fields are required.\n\n**Permissions Required:** `movies:write`\n\n**Validation Rules:**\n- Title: Required, max 500 characters\n- Year: Required, between 1888 and current year\n- Runtime: Required, positive integer, format \"123 mins\"\n- Genres: Required, 1-5 unique genres",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Create New Movie (require movies:write permission)",
                "parameters": [
                    {
                        "description": "Movie creation data",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                " genres": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                " runtime": {
                                    "type": "string"
                                },
                                " year": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "title": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Movie created successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "movie": {
                                    "$ref": "#/definitions/data.Movie"
                                }
                            }
                        },
                        "headers": {
                            "Location": {
                                "type": "string",
                                "description": "URL of the created movie"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - malformed JSON or invalid data types",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid authentication token",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - user account not activated or insufficient permissions",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity - validation errors",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests - rate limit exceeded",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/movies/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve detailed information about a specific movie by its unique ID.\n\n**Permissions Required:** `movies:read`",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get Movie by ID",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movie details",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "movie": {
                                    "$ref": "#/definitions/data.Movie"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid authentication token",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - user account not activated or insufficient permissions",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Movie not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests - rate limit exceeded",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Permanently delete a movie from the catalog by its ID. This action cannot be undone.\n\n**Permissions Required:** `movies:write`",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Delete Movie (require movies:write permission)",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movie deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid authentication token",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - user account not activated or insufficient permissions",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Movie not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests - rate limit exceeded",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing movie using partial update (PATCH). Only provided fields will be updated. Uses optimistic locking to prevent concurrent modification conflicts.\n\n**Permissions Required:** `movies:write`\n\n**Validation Rules:** Same as create operation\n\n**Concurrency Control:** Uses version field for optimistic locking. If the movie has been modified by another request, a 409 Conflict will be returned.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Update Movie (require movies:write permission)",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Movie update data (all fields optional)",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                " genres": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                " runtime": {
                                    "type": "string"
                                },
                                " year": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "title": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movie updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "movie": {
                                    "$ref": "#/definitions/data.Movie"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - malformed JSON or invalid data types",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid authentication token",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - user account not activated or insufficient permissions",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Movie not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Edit conflict - movie has been modified by another request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity - validation errors",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests - rate limit exceeded",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tokens/activation": {
            "post": {
                "description": "Request a new activation token to be sent via email. Useful if the original token expired or was lost. The token is valid for 3 days. This endpoint cannot be used if the account is already activated.\n\n**Email Delivery:** Token is sent to the email address registered in the system (not the one provided in request).\n\n**Token Lifetime:** 3 days",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tokens"
                ],
                "summary": "Resend Activation Token",
                "parameters": [
                    {
                        "description": "User email address",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Activation email will be sent",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - malformed JSON",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity - email not found or already activated",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests - rate limit exceeded",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tokens/authentication": {
            "post": {
                "description": "Generate a bearer token for authentication. The token is valid for 24 hours and must be included in the Authorization header for protected endpoints.\n\n**Usage:** Include the token in subsequent requests as: `Authorization: Bearer {token}`\n\n**Token Lifetime:** 24 hours",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tokens"
                ],
                "summary": "Generate Authentication Token",
                "parameters": [
                    {
                        "description": "User login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                " password": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Token generated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "authentication_token": {
                                    "type": "object",
                                    "properties": {
                                        " expiry": {
                                            "type": "string"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - malformed JSON",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid email or password",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity - validation errors",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests - rate limit exceeded",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tokens/password-reset": {
            "post": {
                "description": "Request a password reset token to be sent via email. The token is valid for 45 minutes and can only be used once. The user account must be activated to receive a reset token.\n\n**Email Delivery:** Token is sent to the email address registered in the system (not the one provided in request).\n\n**Token Lifetime:** 45 minutes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tokens"
                ],
                "summary": "Request Password Reset Token",
                "parameters": [
                    {
                        "description": "User email address",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Password reset email will be sent",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - malformed JSON",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity - email not found or account not activated",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests - rate limit exceeded",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/activated": {
            "put": {
                "description": "Activate a user account using the token received via email. The token is single-use and expires after 3 days. Once activated, all activation tokens for this user are deleted.\n\n**Token Format:** 26-character alphanumeric string",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Activate User Account",
                "parameters": [
                    {
                        "description": "Activation token (26 characters)",
                        "name": "token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account activated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "user": {
                                    "type": "object",
                                    "properties": {
                                        " activated": {
                                            "type": "boolean"
                                        },
                                        " created_at": {
                                            "type": "string"
                                        },
                                        " email": {
                                            "type": "string"
                                        },
                                        " name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - malformed JSON",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - account has been modified during activation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity - invalid or expired token",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests - rate limit exceeded",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/password": {
            "put": {
                "description": "Reset a user's password using a password reset token. The token must be obtained via the `/v1/tokens/password-reset` endpoint and is valid for 45 minutes. Once used, all password reset tokens for this user are deleted.\n\n**Validation Rules:**\n- Password: Required, 8-72 characters\n- Token: Required, 26-character alphanumeric string",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Reset User Password",
                "parameters": [
                    {
                        "description": "New password and reset token",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                " token": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - malformed JSON",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - account has been modified during password reset",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity - invalid/expired token or weak password",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests - rate limit exceeded",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "Register a new user account. Upon successful registration, an activation email will be sent containing a token valid for 3 days. The account must be activated before it can be used.\n\n**Validation Rules:**\n- Name: Required, max 500 characters\n- Email: Required, valid email format, must be unique\n- Password: Required, 8-72 characters\n\n**Default Permissions:** New users receive `movies:read` permission by default.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Register New User",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                " email": {
                                    "type": "string"
                                },
                                " password": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Registration successful - activation email sent",
                        "schema": {
                            "type": "object",
                            "properties": {
                                " user": {
                                    "type": "object",
                                    "properties": {
                                        " activated": {
                                            "type": "boolean"
                                        },
                                        " created_at": {
                                            "type": "string"
                                        },
                                        " email": {
                                            "type": "string"
                                        },
                                        " name": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - malformed JSON or invalid data types",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity - validation errors (e.g., duplicate email, weak password)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests - rate limit exceeded",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "data.Metadata": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer"
                },
                "first_page": {
                    "type": "integer"
                },
                "last_page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total_records": {
                    "type": "integer"
                }
            }
        },
        "data.Movie": {
            "type": "object",
            "properties": {
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "runtime": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "version": {
                    "description": "The version number starts at 1 and will be incremented\neach time the movie information is updated",
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Enter your bearer token in the format: Bearer {token}",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "System health check and version information",
            "name": "Health"
        },
        {
            "description": "Movie catalog management - requires authentication and appropriate permissions",
            "name": "Movies"
        },
        {
            "description": "User account registration, activation, and password management",
            "name": "Users"
        },
        {
            "description": "Token generation for authentication, activation, and password reset",
            "name": "Tokens"
        }
    ],
    "x-extension-openapi": {
        "example": "value"
    }
}